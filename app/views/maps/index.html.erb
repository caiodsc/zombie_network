<!DOCTYPE html>
<html>
<head>
  <title>ZSSN</title>
  <link rel="icon" href="http://www.iconarchive.com/download/i98018/icons8/halloween/zombie.ico" />

  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.css">
  <script src="https://unpkg.com/react@16.8.6/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@16.8.6/umd/react-dom.development.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js"></script>
  <script src="https://unpkg.com/react-leaflet@2.3.0/dist/react-leaflet.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.js"></script>

  <!-- Compiled and minified CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

  <!-- Compiled and minified JavaScript -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/jquery-hammerjs@2.0.0/jquery.hammer.js"></script>
  <script src="https://kit.fontawesome.com/6299bfbded.js"></script>

  <style>
    .leaflet-container {
      height: 100vh;
      width: 100%;
    }
  </style>
</head>


<body>
<div id="container"></div>
</body>

<script>
    const {
        Map: LeafletMap,
        Popup,
        TileLayer,
        Circle,
        LayersControl,
        LayerGroup } = ReactLeaflet;
    navigator.geolocation.getCurrentPosition(function(location) {
        let latitude = -22.8467176; // location.coords.latitude;
        let longitude = -47.0845231; // location.coords.longitude;
        let position = [latitude, longitude];
        axios.get(`<%= infecteds_path %>?lat=${latitude}&lng=${longitude}`)
            .then(res => {
                let data = res.data;
                let finished = true;
                renderMap(position, data);
                function updateMap(e) {
                    if (finished === true) {
                        finished = false;
                        let coords = e.target.getCenter();
                        axios.get(`<%= infecteds_path %>?lat=${coords.lat}&lng=${coords.lng}`)
                            .then(res => {
                                data = res.data;
                                renderMap([coords.lat, coords.lng], data);
                                finished = true;
                            });
                    }
                }
                function renderMap(position, data){
                    let map =
                        React.createElement(LeafletMap, { center: position, zoom: 15, attributionControl: false, touchZoom: false, doubleClickZoom: false, scrollWheelZoom: false, boxZoom: false, onMoveEnd: updateMap.bind(this) },
                            React.createElement(TileLayer, {
                                url: "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
                                detectRetina: true,
                                maxZoom: 18 }),
                            React.createElement(LayersControl, { position: "bottomleft" },
                                React.createElement(LayersControl.Overlay, { name: "Infected", checked: true },
                                    React.createElement(LayerGroup, null,
                                        data.map((survivor) => {
                                            return (
                                                React.createElement(Circle, { center: {lat: survivor["latitude"], lng: survivor["longitude"]}, fillColor: "red", radius: 500 },
                                                    React.createElement(Popup, null, survivor["name"],
                                                        React.createElement("br", null), "Reported as infected " + survivor["times_reported"] + " times!")));

                                        })))));

                    ReactDOM.render(map, document.getElementById('container'));
                }
            });
    });

</script>

</html>
